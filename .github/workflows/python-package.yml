# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '0 0 * * *'

jobs:
  test-setuppy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # `install-python` action no longer supports 2.7 (as of 22-05-2024), so using docker images
      matrix:
        include:
          # I dropped support for old versions intentionally - use original fdint if you need old Python
          - python-version: '2.7'
          - python-version: '3.6'
          - python-version: '3.7'
          - python-version: '3.8'
          - python-version: '3.9'
          - python-version: '3.10'
          - python-version: '3.11'
          - python-version: '3.12'
    container:
      image: "python:${{ matrix.python-version }}"

    steps:
    - uses: actions/checkout@v4
    - name: Prepare virtual env
      run: |
        pip install virtualenv
        python -m virtualenv venv
        venv/bin/pip install numpy Cython setuptools
        venv/bin/python setup.py install
    - name: Test with setup.py
      run: |
        cd ..
        "$OLDPWD/venv/bin/python" -m fdint.tests
  build-test-poetry:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # broken, see https://github.com/alekseik1/fdint/actions/runs/9194455129
          - python-version: '2.7'
            poetry-version: '1.1.15'
          - python-version: '3.6'
            poetry-version: '1.1.15'
          - python-version: '3.7'
            poetry-version: '1.5.1'
          - python-version: '3.8'
            poetry-version: '1.8.3'
          - python-version: '3.9'
            poetry-version: '1.8.3'
          - python-version: '3.10'
            poetry-version: '1.8.3'
          - python-version: '3.11'
            poetry-version: '1.8.3'
          - python-version: '3.12'
            poetry-version: '1.8.3'
    container:
      image: "python:${{ matrix.python-version }}"
    steps:
    - uses: actions/checkout@v4
    - name: Install poetry
      run: pip install "poetry==${{ matrix.poetry-version }}"
    - name: Build poetry package
      run: python -m poetry build
    - name: Cache wheel
      uses: actions/upload-artifact@v4
      with:
        path: dist/*.whl
        name: wheel-${{ matrix.python-version }}
    - name: Update pip on python 2.7
      # cannot install package without pip update for some reason
      run: pip install -U pip
      if: ${{ matrix.poetry-version }} == '2.7'

    - name: Install built package globally
      run: python -m pip install dist/*.whl
    - name: Install numpy globally - test require it
      run: python -m pip install numpy
    - name: Run tests in global interpreter after poetry build
      run: |
        cd /
        python -m fdint.tests
